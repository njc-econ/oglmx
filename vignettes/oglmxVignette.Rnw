\documentclass[nojss]{jss}
%\VignetteIndexEntry{oglmx: A Package for Estimation of  Ordered Generalized Linear Models.}
%\VignetteDepends{oglmx, maxLik, lmtest}
%\VignettePackage{oglmx}
\usepackage{amsmath}
\usepackage{rotating}
\usepackage[utf8]{inputenc}

\author{Nathan Carroll\\
		Universit\"at Regensburg}

\title{\pkg{oglmx}: A Package for Estimation of  Ordered Generalized Linear Models.}


\Abstract{Ordered discrete dependent variable models such as ordered probit and ordered logit are frequently used across the social sciences to study outcomes including health status, happiness, wealth and educational attainment. Unlike in the case of OLS, unaccounted for heteroskedasticity in these models can lead to biased parameter estimates. This paper introduces the \pkg{oglmx} package for the \proglang{R} statistical environment that permits estimation of generalized models that allow the user to model the form of the heteroskedasticity.}

\Keywords{ordered multinomial models, heteroskedasticity, heterogeneous choice model,\\ location-scale model, discrete ordered outcome}

\Address{
	Nathan Carroll\\
	Institut f\"ur Volkswirtschaftslehre und \"Okonometrie\\
	Faculty of Business, Economics and Management Information Systems\\
	Universit\"at Regensburg\\
	Universit\"atsstrasse 31\\
93053 Regensburg, Germany\\
	E-mail: \email{nathan.carroll@ur.de}
}

%% need no \usepackage{Sweave.sty}

\begin{document}
%\SweaveOpts{concordance=TRUE}

\section{Introduction}
Ordered discrete dependent variable models are common across the social sciences, examples of outcomes that require such models include categorical measures of health status \citep{Case2002}, happiness or life-satisfaction \citep{Gerdtham2001}, wealth \citep{Hartog1998} and educational attainment \citep{Dearden2002b}. Standard models such as ordered probit and ordered logit assume that error variances are constant across observations, or homoskedastic. When using ordinary least squares to estimate a linear relationship in the presence of heteroskedasticity in the error term parameter estimates remain consistent, though standard errors need to be adjusted via a variance-covariance estimator that takes account of the heteroskedasticity. However, in the case of models such as ordered probit and ordered logit failure to account for heteroskedasticity can lead to biased parameter estimates in addition to misspecified standard errors. This paper introduces the \pkg{oglmx} package developed for the \proglang{R} statistical environment \citep{RCoreTeam2015} that allows the user to model the form of the heteroskedasticity in various ordered discrete dependent variable models.

The simplest discrete dependent variable models, those for the case of binary outcomes, can be estimated using the \textsf{glm} function available in the core distribution of \proglang{R}, while ordered dependent variable models beyond the binary case are included in the \textbf{MASS} package \citep{Venables2002} under the \textsf{polr} function. The standard ordered probit and logit models include a normalization of the error variance which implies that the scale of the estimated parameters are of little relevance to the researcher, instead researchers are often interested in the marginal effects of particular variables on the probabilities of each observable value of the dependent variable. \proglang{R} packages returning marginal effects include \pkg{erer} \citep{Sun2014} and \pkg{mfx} \citep{Fernihough2014}. The \pkg{oglmx} package includes a \textsf{margins} function that returns marginal effects (and their standard errors) for all models estimated by the \textsf{oglmx} function. The package includes link functions for probit, logit, cauchit, complementary log-log and log-log while allowing the user to specify the functional form used to model the variance of the standard error. The function is written so that it is sufficiently flexible to allow estimation of interval regression with fixed boundaries across observations in addition to the ordered models provided by function \textsf{polr}.\footnote{The \textsf{oglm} command in \proglang{Stata} \citep{Williams2010} offers a similar set of models as the \textsf{oglmx} function but omits interval regression and does not allow flexibility in the function used to model the variance of the error term.} The \textsf{oglmx} package makes use of the \pkg{maxLik} \citep{Henningsen2011} package to maximise the likelihood for the user specified model. 

The paper is organised as follows: Section \ref{EconometricSetup} describes the models estimated by the \textsf{oglmx} function, section \ref{RcodeSetup} gives an outline of how the core functions of the package work, section \ref{WorkingExamples} provides a working example and section \ref{Conclusion} concludes.



\section{Ordered Multinomial Models} \label{EconometricSetup}
Ordered multinomial models such as ordered probit and ordered logit are frequently motivated using a latent variable model. Let $y$ denote a random variable taking on one of $J$ possible values $\left\lbrace 0,1,2,\ldots ,J-1 \right\rbrace$. Importantly there is an order to these $J$ responses. There is an unobserved latent variable $y^{*}$ that is determined by:

\[ y^* = \mathbf{x}\beta + \sigma\epsilon
\]

where $x$ is a $1\times K$ vector of explanatory variables that may or may not contain a constant depending on the particular model to be estimated, $\beta$ is a $K \times 1$ vector of parameters, $\epsilon$ is a mean zero random error term and $\sigma$ is a parameter that allows the variance of the error term to be shifted up or down. Let $\alpha_1 < \alpha_2 < \ldots < \alpha_{J-1}$ be threshold parameters that determine the observed outcome as follows:

\begin{equation*}
	\begin{aligned}
		y&=0 && \text{ if } y^* \leq \alpha_1 \\
			y&=1 && \text{ if } \alpha_1 <y^* \leq \alpha_2 \\
			 &  && \text{    }\vdots \\
			y&=J-1 && \text{ if } y^* > \alpha_{J-1}. 
	\end{aligned}
\end{equation*}
	
Given a distribution function for the error term $\epsilon$, vector of parameters $\beta$ and the set of threshold parameters we can obtain the probabilities for each of the outcomes.

\begin{align*}
	& P\left(y=0\right)=P\left(y^*\leq\alpha_1\right)=P\left(\epsilon\leq \frac{\alpha_1-\textbf{x}\beta}{\sigma}\right)\\
	& P\left(y=1\right)=P\left(y^*\leq\alpha_2\right)-P\left(y^*\leq\alpha_1\right)=P\left(\epsilon\leq \frac{\alpha_2-\textbf{x}\beta}{\sigma}\right)-P\left(\epsilon\leq \frac{\alpha_1-\textbf{x}\beta}{\sigma}\right)\\
		&\vdots  \\
	& P\left(y=J-1\right)=P\left(y^*>\alpha_{J-1}\right)=P\left(\epsilon > \frac{\alpha_{J-1}-\mathbf{x}\beta}{\sigma}\right).
\end{align*}

More generally by setting $\alpha_0=-\infty$ and $\alpha_J=\infty$ we have:

\begin{align*}
	P\left(y=j\right)&=P\left(\epsilon\leq \frac{\alpha_{j+1}-\textbf{x}\beta}{\sigma}\right)-P\left(\epsilon\leq \frac{\alpha_{j}-\textbf{x}\beta}{\sigma}\right)\\
							&=F\left(\frac{\alpha_{j+1}-\textbf{x}\beta}{\sigma}\right)-F\left(\frac{\alpha_{j}-\textbf{x}\beta}{\sigma}\right)
\end{align*}

where $F$ is the assumed cumulative distribution function (cdf) for the error term $\epsilon$. The various models estimated by the \textsf{oglmx} function vary according to the assumed distribution of the error term, e.g. logistic distribution for ordered logit and standard normal distribution for ordered probit, and the parameters that are known versus those that are estimated, e.g. under interval regression the threshold parameters are known while the constant in the latent variable equation and the variance of the error term are estimated whereas with ordered probit the levels of the constant and the variance of the error term are imposed while the threshold parameters are estimated.

To allow for heteroskedasticity the variance of the error term is permitted to vary by allowing $\sigma$ to be determined by the following equation:

\begin{equation*}
	\sigma = g\left(\mathbf{z}\delta\right)
\end{equation*}
where $\mathbf{z}$ is a $1 \times L$ vector of variables that explain the level of the variance. As was the case for the vector $\mathbf{x}$, $\mathbf{z}$ may or may not include a constant. $\delta$ is an $L \times 1$ vector of parameters. The function $g\left(.\right)$ should ideally return a positive value for all observed levels of variables in $\mathbf{z}$, with this in mind the default option of the package is to use the exponential function. There is no restriction regarding the choice of variables in $\mathbf{z}$, it may contain the same variables as $\mathbf{x}$ or be entirely different.

The \textsf{oglmx} function obtains estimates of the parameters of the model by maximising the log-likelihood function, that for a sample consisting of $n$ observations is given by:

\[ \mathcal{L}\left(\beta,\delta,\alpha \right)=\sum\limits_{i=1}^{n} \sum\limits_{j=0}^{J-1} I\left(y_i=j\right) \log \left(F\left( \frac{\alpha_{j+1}-\textbf{x}_i\beta}{g\left(\mathbf{z}_i\delta\right)}\right)-F\left( \frac{\alpha_{j}-\textbf{x}_i\beta}{g\left(\mathbf{z}_i\delta\right)}\right)\right).
\]

where $I\left(.\right)$ is the indicator function. Following the usual properties of maximum likelihood estimators the parameter estimates obtained from maximising the likelihood are consistent and asymptotically normal and the asymptotic variance of the estimated parameters can be estimated straightforwardly \citep{Wooldridge2002}. The main body of code in the \textsf{oglmx} function calculates the above log-likelihood, score vector and Hessian matrix given a vector of parameter values. This function is passed as an argument to a Newton-Raphson type algorithm via the \pkg{maxLik} package.

Many popular models are included under the above framework as the distribution function $F\left(.\right)$ and the parameters that are estimated or imposed are varied. Table \ref{ModelsIncluded} lists some of the models and the parameter restrictions imposed in each case.

\begin{sidewaystable}
	
\caption{Parameter Assumptions for Popular Ordered Dependent Variable Models.}
	\begin{center}
	\begin{tabular}{l|ccccc}
	 & No. & Error  & Constant in  & Error & Threshold	  \\
	\multicolumn{1}{c|}{Model}	& Outcomes & Distribution & Mean Equation & Variance ($\sigma$) & Parameters \\
		\hline
	Probit & 2 & Standard Normal & Included & Set =1 & Set =0\\
	Logit  & 2 & Standard Logistic & Included & Set =1 & Set =0\\
	Ordered Probit & >2 & Standard Normal & Excluded & Set =1 & Estimated \\
	Ordered Logit & >2 & Standard Logistic & Excluded & Set =1 & Estimated \\
	Interval Regression &>2 & User Choice & Included & Estimated & Specified\\
	\hline
	\end{tabular}
\end{center}		
	
\label{ModelsIncluded}
\end{sidewaystable}

\subsection{Marginal Effects}
In many multinomial models the absolute magnitude of estimated regression coefficients is of little relevance, for example for an ordered probit the scale of the coefficients is fixed by fixing the variance of the error term to unity and the constant equal to zero. Instead researchers are interested in the marginal effect of a variable on the probability of each outcome. In homoskedastic models the signs of regression coefficients are informative of the sign of the marginal effects for outcomes at the extreme of the distribution, but not for intermediate outcomes. In contrast in a heteroskedastic model the sign of a variable's coefficient(s) is on its own uninformative on the sign of any marginal effect when it enters the equation for the variance. For a continuous variable $v$ contained in the $k$th element of vector $\mathbf{x}$ and the $l$th element of vector $\mathbf{z}$ the marginal effect of that variable on the probability of outcome $j$, denoted $ME_j\left(\mathbf{x},\mathbf{z}\right)$ occurring is given by:
\begin{equation}
	\begin{split}
	ME_j\left(\mathbf{x},\mathbf{z}\right)=\frac{\partial P\left( y=j \right) }{ \partial v }=&-\frac{\beta_k}{g\left(\mathbf{z}\delta\right)}\left(f\left( \frac{\alpha_{j+1}-\textbf{x}\beta}{g\left(\mathbf{z}\delta\right)} \right) - f\left( \frac{\alpha_{j}-\textbf{x}\beta}{g\left(\mathbf{z}\delta\right)}\right)\right)\\
	& -\frac{\delta_l g'\left(\mathbf{z}\delta\right)}{g\left(\mathbf{z}\delta\right)}\left(\frac{\alpha_{j+1}-\textbf{x}\beta}{g\left(\mathbf{z}\delta\right)}f\left( \frac{\alpha_{j+1}-\textbf{x}\beta}{g\left(\mathbf{z}\delta\right)}\right)-\frac{\alpha_{j}-\textbf{x}\beta}{g\left(\mathbf{z}\delta\right)} f\left( \frac{\alpha_{j}-\textbf{x}\beta}{g\left(\mathbf{z}\delta\right)}\right)\right)
	\end{split}
	\label{MargEffCont}
\end{equation}
 
where $f\left(.\right)$ is the probability density function of error term $\epsilon$. In general the sign of marginal effects depends on the sign of the relevant coefficients and the relative value of the mean of the latent variable ($\mathbf{x}\beta$) and relevant threshold parameters $\alpha_j$ and $\alpha_{j+1}$. Equation \ref{MargEffCont} is the correct formula when the variable under consideration is continuous, however for a binary variable it may be preferable to consider the full change of a variable from zero to one rather than a change at the margin. In this case the marginal effect of a binary variable contained in $x$ and/or $z$ is calculated using:
	\begin{equation}
			ME_j\left(\mathbf{x},\mathbf{z}\right)=F\left(\frac{\alpha_{j+1}-\mathbf{x}_1\beta}{g\left(\mathbf{z}_1\delta\right)}\right)-F\left(\frac{\alpha_{j}-\mathbf{x}_1\beta}{g\left(\mathbf{z}_1\delta\right)}\right)-\left(F\left(\frac{\alpha_{j+1}-\mathbf{x}_0\beta}{g\left(\mathbf{z}_0\delta\right)}\right)-F\left(\frac{\alpha_{j}-\mathbf{x}_0\beta }{g\left(\mathbf{z}_0\delta\right)}\right)\right)
	\label{MargEffDisc}
	\end{equation}
where $\mathbf{x}_1$ and $\mathbf{z}_1$ denote vectors with the variable of interest set equal to one while $\mathbf{x}_0$ and $\mathbf{z}_0$ set the variable equal to zero.	

Equations \ref{MargEffCont} and \ref{MargEffDisc} tell us how to calculate the marginal effect given a particular set of values of the components of the vectors $\mathbf{x}$ and $\mathbf{z}$. Two main methods are used to summarize the marginal effects for a sample of data, the marginal effect at mean (MEM) and the average marginal effect (AME). The MEM for a particular variable calculates the marginal effect supposing that all variables were at the means for the sample, that is:
	\[ MEM_j = ME_j\left(\bar{\mathbf{x}},\bar{\mathbf{z}}\right)
	\]
where $\bar{\mathbf{x}}$ and $\bar{\mathbf{z}}$ denote vectors of means. The AME calculates the marginal effect for each observed set of variables $\mathbf{x}_i$ and $\mathbf{z}_i$ and averages the marginal effects across the sample, that is:
	\[ AME_j = \frac{1}{n}\sum_{i=1}^{n} ME_j\left(\mathbf{x}_i,\mathbf{z}_i\right).
	\]
The \textsf{margins.oglmx} function included in the \pkg{oglmx} package can calculate either of these two measures of the marginal effect. The marginal effects are a non-linear function of the estimated parameters, an approximation to the standard errors of the marginal effects can be obtained via application of the delta method. The \textsf{margins.oglmx} function calculates the standard errors using the delta method.


	
\section{Package implementation} \label{RcodeSetup}
The current implementation of the package follows the standard for model estimation in \proglang{R}, a user input function \textsf{oglmx} that takes as input a formula for the empirical model being estimated and the data frame where the data is to be sourced from, and a \textsf{oglmx.fit} function called by \textsf{oglmx} that estimates the model. The \textsf{oglmx.fit} function contains further functions that return the analytic log-likelihood, score vector and hessian for a given parameter vector and these are used by the likelihood maximization procedure of the \pkg{maxLik} package which given the analytic hessian performs the optimization with a Newton-Raphson algorithm by default.

\section{Using the oglmx package} \label{WorkingExamples}


<<echo=FALSE>>=
  x_1param<-0.75
@


To illustrate the use of the package a random generated dataset will be used. An outcome variable $y$ will take on one of four possible values, without loss of generality we may specify them as $\left\lbrace -1,0,1,2\right\rbrace$. There is an underlying latent variable $y^*$, the value of this variable relative to threshold values $\left\lbrace
-0.5, 0.5, 1.5 \right\rbrace$ determine the observed value of outcome $y$. The latent variable will be a linear function of two variables and a mean zero random error term, the variance of the random error term will be a function of the same two variables. 
\[  y^* = \beta_0 + \beta_1 x_1 + \beta_2 x_2 + \sigma \epsilon
\] 
where $\epsilon$ will have a standard normal distribution. The variance $\sigma$ will be given by:
	\[ \sigma = \exp\left(\delta_0 + \delta_1 x_1 + \delta_2 x_2\right)
	\]
Variable $x_1$ will be binary and $x_2$ will be continuous. Specifically $x_1$ will take on value $1$ with probability \Sexpr{x_1param} and $x_2$ will be drawn from a standard normal distribution.

<<>>=
  set.seed(242)
  n<-250
  x1<-rbinom(n,1,0.75) # binary variable
  x2<-rnorm(n) # continuous variable
  sampledata<-cbind(rep(1,n),x1,x2)
  # set true parameter values
  meanparams<-c(0.5,1,-0.5) 
  varparams<- c(0,0.5,-0.5)
  # generate latent variable
  ystar<-sampledata%*%meanparams+rnorm(n)*exp(sampledata%*%varparams)
  # generate outcome variable
  threshparams<-c(-0.5,0.5,1.5)
  outcomes<-c(-1,0,1,2)
  setvalue<-function(x){
    locate<-outcomes[1:(length(outcomes)-1)][x<threshparams]
    if (length(locate)==0){
      return(outcomes[length(outcomes)])
    } else {
      return(locate[1])
    }
  }
  y<-sapply(ystar,setvalue)
  sampleframe<-data.frame(y,x1,x2)
@

The parameter values chosen for the example are for the mean equation $\beta_0=\Sexpr{meanparams[1]}$, $\beta_1=\Sexpr{meanparams[2]}$ and $\beta_2=\Sexpr{meanparams[2]}$ and for the variance $\delta_0=\Sexpr{varparams[1]}$, $\delta_1=\Sexpr{varparams[2]}$ and $\delta_2=\Sexpr{varparams[3]}$. Given the parameters and knowing the source distribution of the variables we can calculate the expected marginal effects at means for the two variables. Table \ref{exampleMEffs} displays the implied marginal effects.

<<echo=FALSE>>=
  # calculate marginal effects at means. 
  # output is two vectors (one for each variable) of length equal to number of outcomes (four)
  xB<-c(1,x_1param,0)%*%meanparams
  zD<-c(1,x_1param,0)%*%varparams
  exp_zD<- exp(zD)
  invexp_zD<-1/exp_zD
  threshparams<-c(-Inf,threshparams,Inf)
  x1Meffs<-x2Meffs<-vector("numeric",length(outcomes))
  for (i in 1:length(outcomes)){
    if (i==1){
      ratio1<-(threshparams[i+1]-xB)*invexp_zD
      x1Meffs[i]<- -meanparams[2]*invexp_zD*dnorm(ratio1)-varparams[2]*ratio1*dnorm(ratio1)
      x2Meffs[i]<- -meanparams[3]*invexp_zD*dnorm(ratio1)-varparams[3]*ratio1*dnorm(ratio1)
    } else if (i==length(outcomes)){
      ratio0<-(threshparams[i]-xB)*invexp_zD
      x1Meffs[i]<- -meanparams[2]*invexp_zD*(-dnorm(ratio0))-varparams[2]*(-ratio0*dnorm(ratio0))
      x2Meffs[i]<- -meanparams[3]*invexp_zD*(-dnorm(ratio0))-varparams[3]*(-ratio0*dnorm(ratio0))
    } else {
    ratio1<-(threshparams[i+1]-xB)*invexp_zD
    ratio0<-(threshparams[i]-xB)*invexp_zD
    x1Meffs[i]<- -meanparams[2]*invexp_zD*(dnorm(ratio1)-dnorm(ratio0))-varparams[2]*(ratio1*dnorm(ratio1)-ratio0*dnorm(ratio0))
    x2Meffs[i]<- -meanparams[3]*invexp_zD*(dnorm(ratio1)-dnorm(ratio0))-varparams[3]*(ratio1*dnorm(ratio1)-ratio0*dnorm(ratio0))
    }
  }
  write.csv(data.frame(x1Meffs,x2Meffs),"calculatedMargEffs.csv",row.names = FALSE)
@

\begin{table}[h]
\caption{Implied Marginal Effects at Means for Example Data.}
  \begin{center}
    \begin{tabular}{l|c|c}
      Outcome & $x_1$ & $x_2$ \\
      \hline
      $y=\Sexpr{outcomes[1]}$ & \Sexpr{round(x1Meffs[1],3)} & \Sexpr{round(x2Meffs[1],3)} \\
      $y=\Sexpr{outcomes[2]}$ & \Sexpr{round(x1Meffs[2],3)} & \Sexpr{round(x2Meffs[2],3)} \\
      $y=\Sexpr{outcomes[3]}$ & \Sexpr{round(x1Meffs[3],3)} & \Sexpr{round(x2Meffs[3],3)} \\
      $y=\Sexpr{outcomes[4]}$ & \Sexpr{round(x1Meffs[4],3)} & \Sexpr{round(x2Meffs[4],3)}\\
      \hline
    \end{tabular}
  \end{center}
  \label{exampleMEffs}
\end{table}

Note that the marginal effect of the variable $x_2$ is negative for the two extreme outcomes ($y=-1$ and $y=2$). This possibility cannot be captured in a standard ordered probit model unless including the variable non-linearly in the regression equation, for example by adding the square of the variable, which generates additional complications in calculating marginal effects.

The standard ordered probit can be estimated with the \textsf{oglmx} function with the correct specification of optional arguments, or by using the \textsf{oprobit.reg} function included with the package. 

<<>>=
  library("oglmx")
  results.oprob<-oglmx(y ~ x1 + x2, data=sampleframe, link="probit",
                       constantMEAN = FALSE, constantSD = FALSE, 
                       delta=0,threshparam = NULL)
  results.oprob1<-oprobit.reg(y ~ x1 + x2, data=sampleframe)
  summary(results.oprob)
  summary(results.oprob1)
  margins.oglmx(results.oprob,ascontinuous = TRUE)
@

In a typical ordered probit model, whether standard or heteroskedastic, the scale of the parameter vectors is not identified. Identifying assumptions are necessary, for the standard ordered probit the constant in the latent variable equation is set equal to zero while the variance of the error term is set equal to one. These assumptions are somewhat arbitrary and may be replaced by alternative assumptions. For example, in the case that the threshold values are meaningful two (or more) of them can be imposed and the intercept and variance of the error term can be estimated which leads to parameter estimates with a meaningful scale. The code below estimates a heteroskedastic probit model, first with a standard assumption of no constant in either the latent variable mean equation or the variance equation and secondly using the fact we know the threshold values so fixing two of them to their true values.

<<>>=
  results.oprobhet<-oglmx(y ~ x1 + x2, ~ x1 + x2, data=sampleframe,
                          constantMEAN = FALSE, constantSD = FALSE)
  results.oprobhet1<-oglmx(y ~ x1 + x2, ~ x1 + x2, data=sampleframe,
                          constantMEAN = TRUE, constantSD = TRUE,
                          threshparam=c(-0.5,NA,1.5))
  summary(results.oprobhet)
  summary(results.oprobhet1)
  margins.oglmx(results.oprobhet)
  margins.oglmx(results.oprobhet1)
@

Considering the results for the parameter estimates, the size of the parameters in the mean equation are different but the signs are the same and the conclusions reached from t-tests of significance are the same. More importantly, the estimated marginal effects from these two procedures are identical. The \textsf{oglm} command in Stata that permits estimation of heteroskedastic ordered models imposes the no-constant assumption used in the first estimation above. Given the results and knowing the threshold values it is possible to transform the results to obtain the correctly scaled parameter estimates, however by allowing a flexible specification the \pkg{oglmx} package avoids the need for this transformation.

Using the \pkg{lmtest} package we can test whether the inclusion of the variables $x_1$ and $x_2$ in the variance equation are jointly significant using a likelihood ratio test.

<<>>=
  library("lmtest")
  lrtest(results.oprob,results.oprobhet)
@

Unsurprisingly, we see that by modelling the heteroskedasticity we find a significant improvement in model fit.






\section{Summary and future development} \label{Conclusion}

This paper introduces the \pkg{oglmx} package for the \proglang{R} programming language. In linear models heteroskedasticity in the error term does not affect the consistency of parameter estimates and provided suitable standard error corrections are used inferences drawn from OLS estimates are reliable. For non-linear models such as probit and ordered probit this is no longer the case, heteroskedasticity can lead to substantially biased estimates of marginal effects. The \pkg{oglmx} package permits the user to model the heteroskedasticity in order to obtain consistent estimates of marginal effects and reliable statistical tests.


\cite{Ai2003a} identified an error committed by many applied researchers when interpreting results when using non-linear models such as probit and logit and including interaction terms in their model. Further development of the package is expected to lead the \textsf{margins} function to identify functions of variables that enter the equations for the mean and standard deviation equations, i.e. interaction terms and polynomials of variables and estimate the true marginal effects desired by researchers.

Inclusion of fixed effects in non-linear models such as probit, logit and their ordered equivalents can lead to biased estimates due to the incidental parameters problem recognised by \cite{Neyman1948}. Further development of the package will add methods to reduce this bias, for example that suggested by \cite{Carro2007a} and adapted to the ordered outcome case with two types of fixed effects in \cite{Carro2014}.


%%\bibliographystyle{jss}
	\bibliography{oglmxReferences}

\end{document}